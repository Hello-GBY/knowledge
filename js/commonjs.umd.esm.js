// commonjs umd esm 区别
都是为了模块化;

commonjs;
所有代码作用域都在文件中;
不会污染全局;
模块可以多次加载 但只会在第一次 引用时运行，运行之后结果就进行缓存 存储在内存中 ，之后无论加载几次都会读取 内存中数据
module.exports 输出的是值拷贝 一旦输出之后 在更改文件 不会影响输出的值



AMD 规范
 因为nodejs的commonjs 是同步加载的  不适用 在浏览器中加载

AmD 引用是为了进行浏览器中异步加载 ， 允许进行 回调函数 

umd  是一种思想 知识用来将 各种模块能在 一起使用

ES6 模块
生成一个只读引用


